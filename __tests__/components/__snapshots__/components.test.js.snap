// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Components CircleConfirmation should create component 1`] = `
<circleConfirmation
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components ColorPicker should create component 1`] = `
<colorPicker
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components Content should create component 1`] = `<content />`;

exports[`Components DatePicker should create component 1`] = `
<datePicker
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components DropdownListItem should create component 1`] = `
<dropdownListItem
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components GridLayout should create component 1`] = `
<gridLayout
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components Image should create component 1`] = `
<image
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components Light should create component 1`] = `
<light
  debug={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components Line should create component 1`] = `
<line
  debug={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components LinearLayout should create component 1`] = `
<linearLayout
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components ListViewItem should create component 1`] = `
<listViewItem
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components PageView should create component 1`] = `
<pageView
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components Panel should create component 1`] = `
<panel
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components PortalIcon should create component 1`] = `<portalIcon />`;

exports[`Components Prism should create component 1`] = `<prism />`;

exports[`Components Scene should create component 1`] = `<scene />`;

exports[`Components ScrollBar should create component 1`] = `
<scrollBar
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components ScrollView should create component 1`] = `
<scrollView
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components Slider should create component 1`] = `
<slider
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components Tab should create component 1`] = `
<tab
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components TextEdit should create component 1`] = `
<textEdit
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components TimePicker should create component 1`] = `
<timePicker
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components Toggle should create component 1`] = `
<toggle
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components ToggleGroup should create component 1`] = `
<toggleGroup
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components View should create component 1`] = `
<view
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components WebView should create component 1`] = `
<webView
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;
