// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Components CircleConfirmation should create component 1`] = `
<circleConfirmation
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  radius={0.2}
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components ColorPicker should create component 1`] = `
<colorPicker
  alignment="center-center"
  color="white"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components DatePicker should create component 1`] = `
<datePicker
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components DropdownListItem should create component 1`] = `
<dropdownListItem
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  id={0}
  label=""
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components GridLayout should create component 1`] = `
<gridLayout
  alignment="center-center"
  columns={0}
  debug={false}
  defaultItemAlignment="top-left"
  defaultItemPadding={
    Array [
      0,
      0,
      0,
      0,
    ]
  }
  enabled={true}
  height={0}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  rows={1}
  skipRaycast={false}
  visible={true}
  width={0}
/>
`;

exports[`Components Image should create component 1`] = `
<image
  alignment="center-center"
  debug={false}
  enabled={true}
  fit="stretch"
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  useFrame={false}
  visible={true}
/>
`;

exports[`Components Light should create component 1`] = `
<light
  color="white"
  debug={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  type="directional"
  visible={true}
/>
`;

exports[`Components Line should create component 1`] = `
<line
  debug={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  points={
    Array [
      Array [
        0,
        0,
        0,
      ],
      Array [
        1,
        1,
        1,
      ],
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components LinearLayout should create component 1`] = `
<linearLayout
  alignment="center-center"
  debug={false}
  defaultItemAlignment="top-left"
  defaultItemPadding={
    Array [
      0,
      0,
      0,
      0,
    ]
  }
  enabled={true}
  height={0}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  orientation="vertical"
  skipInvisibleItems={false}
  skipRaycast={false}
  visible={true}
  width={0}
/>
`;

exports[`Components ListViewItem should create component 1`] = `
<listViewItem
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components PageView should create component 1`] = `
<pageView
  alignment="center-center"
  debug={false}
  enabled={true}
  height={0}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
  visiblePage={0}
  width={0}
/>
`;

exports[`Components Panel should create component 1`] = `
<panel
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components Prism should create component 1`] = `
<prism
  orientation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  position={
    Array [
      0,
      0,
      0,
    ]
  }
  scale={
    Array [
      1,
      1,
      1,
    ]
  }
  size={
    Array [
      1,
      1,
      1,
    ]
  }
/>
`;

exports[`Components Scene should create component 1`] = `<scene />`;

exports[`Components ScrollBar should create component 1`] = `
<scrollBar
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  length={0.5}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  orientation="vertical"
  skipRaycast={false}
  thickness={0}
  thumbPosition={0}
  thumbSize={0}
  visible={true}
/>
`;

exports[`Components ScrollView should create component 1`] = `
<scrollView
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  scrollBarVisibility="auto"
  scrollBounds={
    Object {
      "max": Array [
        0.5,
        0.5,
        0.1,
      ],
      "min": Array [
        -0.5,
        -0.5,
        -0.1,
      ],
    }
  }
  scrollDirection="vertical"
  scrollSpeed={0.1}
  scrollValue={0}
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components Slider should create component 1`] = `
<slider
  alignment="center-center"
  debug={false}
  enabled={true}
  height={0}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  max={1}
  min={0}
  skipRaycast={false}
  value={0}
  visible={true}
  width={0.5}
/>
`;

exports[`Components Tab should create component 1`] = `
<tab
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  textColor="white"
  visible={true}
/>
`;

exports[`Components TextEdit should create component 1`] = `
<textEdit
  alignment="center-center"
  charLimit={0}
  charSpacing={0}
  debug={false}
  enabled={true}
  fontParameters={
    Object {
      "allCaps": false,
      "fontSize": 0.08,
      "fontStyle": "normal",
      "fontWeight": "regular",
    }
  }
  hideBounds={false}
  lineSpacing={1}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  multiline={false}
  password={false}
  scrollBarVisibility="auto"
  scrollSpeed={0.1}
  skipRaycast={false}
  textAlignment="left"
  textColor="white"
  textEntry="normal"
  textPadding={
    Array [
      0,
      0,
      0,
      0,
    ]
  }
  textSize={0.08}
  visible={true}
>
  
</textEdit>
`;

exports[`Components TimePicker should create component 1`] = `
<timePicker
  alignment="center-center"
  color="white"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  showHint={false}
  skipRaycast={false}
  timeFormat="auto"
  visible={true}
/>
`;

exports[`Components Toggle should create component 1`] = `
<toggle
  alignment="center-center"
  debug={false}
  enabled={true}
  height={0}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  on={false}
  skipRaycast={false}
  textColor="white"
  type="default"
  visible={true}
/>
`;

exports[`Components ToggleGroup should create component 1`] = `
<toggleGroup
  alignment="center-center"
  allTogglesOff={false}
  allowAllOff={false}
  allowMultipleOn={false}
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components View should create component 1`] = `
<view
  alignment="center-center"
  debug={false}
  enabled={true}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
/>
`;

exports[`Components WebView should create component 1`] = `
<webView
  alignment="center-center"
  debug={false}
  enabled={true}
  height={0.5}
  hideBounds={false}
  localPosition={
    Array [
      0,
      0,
      0,
    ]
  }
  localRotation={
    Array [
      0,
      0,
      0,
      1,
    ]
  }
  localScale={
    Array [
      1,
      1,
      1,
    ]
  }
  skipRaycast={false}
  visible={true}
  width={0.5}
/>
`;
